name: ci

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  dev-container:
    runs-on: ubuntu-18.04
    steps:
      - uses: actions/checkout@v2

      - name: build dev container
        run: docker build -t devcontainer ./.devcontainer
        shell: bash

      - name: make lint
        run: docker run -v "${PWD}:/workspaces/docker-lock" devcontainer make lint
        shell: bash

      - name: make format
        run: docker run -v "${PWD}:/workspaces/docker-lock" devcontainer make format
        shell: bash

      - name: make unittest
        run: docker run -v "${PWD}:/workspaces/docker-lock" devcontainer make unittest
        shell: bash
      
      - name: make inttest
        run: docker run --network host -v /var/run/docker.sock:/var/run/docker.sock -v "${PWD}:/workspaces/docker-lock" -e DOCKER_USERNAME="${DOCKER_USERNAME}" -e DOCKER_PASSWORD="${DOCKER_PASSWORD}" -e ACR_USERNAME="${ACR_USERNAME}" -e ACR_PASSWORD="${ACR_PASSWORD}" -e ACR_REGISTRY_NAME="${ACR_REGISTRY_NAME}" devcontainer make inttest
        shell: bash
        env:
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
          ACR_USERNAME: ${{ secrets.ACR_USERNAME }}
          ACR_PASSWORD: ${{ secrets.ACR_PASSWORD }}
          ACR_REGISTRY_NAME: ${{ secrets.ACR_REGISTRY_NAME }}
        if: github.event.pull_request.head.repo.full_name == github.repository

  all-hosts:
    strategy:
      matrix:
        os: [ ubuntu-18.04, windows-2019, macos-10.15 ]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v2

      - name: mac prerequisites
        run: |
          set -euo pipefail
          curl -fsSL "https://github.com/docker/docker-credential-helpers/releases/download/v${OSXKEYCHAIN_VERSION}/docker-credential-osxkeychain-v${OSXKEYCHAIN_VERSION}-amd64.tar.gz" | gunzip | tar xopf -
          mv docker-credential-osxkeychain /usr/local/bin
          # docker cli does not come installed by default on the build agent
          curl -fsSL "https://download.docker.com/mac/static/stable/x86_64/docker-${DOCKER_VERSION}.tgz" | gunzip | tar xopf -
          mv docker/docker /usr/local/bin
          mkdir -p "${HOME}/.docker"
          echo '{"credsStore":"osxkeychain"}' > "${HOME}/.docker/config.json"
        shell: bash
        env:
          OSXKEYCHAIN_VERSION: '0.6.3'
          DOCKER_VERSION: '19.03.9'
        if: matrix.os == 'macos-10.15'

      - name: windows prerequisites
        run: |
          set -euo pipefail
          find . -type f -print0 | xargs -0 dos2unix
          curl -fsSL "https://github.com/docker/docker-credential-helpers/releases/download/v${WINCRED_VERSION}/docker-credential-wincred-v${WINCRED_VERSION}-amd64.zip" -o docker-credential-wincred.zip
          unzip docker-credential-wincred.zip
          mkdir -p /usr/bin
          mv docker-credential-wincred.exe /usr/bin
          mkdir -p "${USERPROFILE}/.docker"
          echo '{"credsStore":"wincred"}' > "${USERPROFILE}/.docker/config.json"
          choco install -y mingw
        shell: bash
        env:
          WINCRED_VERSION: '0.6.3'
        if: matrix.os == 'windows-2019'

      - name: install go
        uses: actions/setup-go@v2
        with:
          go-version: '1.15.0'

      - name: make install
        run: make install
        shell: bash

      - name: make unittest
        run: make unittest
        shell: bash

      - name: make inttest
        run: make inttest
        shell: bash
        env:
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
          ACR_USERNAME: ${{ secrets.ACR_USERNAME }}
          ACR_PASSWORD: ${{ secrets.ACR_PASSWORD }}
          ACR_REGISTRY_NAME: ${{ secrets.ACR_REGISTRY_NAME }}
        if: github.event.pull_request.head.repo.full_name == github.repository
